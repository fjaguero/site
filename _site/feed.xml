<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fernando Agüero</title>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 16 Apr 2018 23:50:58 +0000</pubDate>
    <lastBuildDate>Mon, 16 Apr 2018 23:50:58 +0000</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>Using MutationObservers to build a simple extension</title>
        <description>&lt;p&gt;Have you ever have the need to &lt;em&gt;listen&lt;/em&gt; to DOM changes? I did. That’s why I built a simple extension by using &lt;em&gt;Mutation Observers&lt;/em&gt;. Let’s get some context.&lt;/p&gt;

&lt;h3 id=&quot;dom-mutations-apis&quot;&gt;DOM mutations APIs&lt;/h3&gt;
&lt;p&gt;Listening to DOM changes was possible with the past DOM3 specification, but it didn’t have good, specific API: you needed to use event listeners.&lt;/p&gt;

&lt;h5 id=&quot;previously-on-dom3&quot;&gt;Previously on DOM3&lt;/h5&gt;

&lt;p&gt;This was called &lt;em&gt;Mutation Events&lt;/em&gt; and it exposed a list of events you were able to listen to:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*  DOMAttrModified
*  DOMAttributeNameChanged
*  DOMCharacterDataModified 
*  DOMElementNameChanged
*  DOMNodeInserted
*  DOMNodeInsertedIntoDocument
*  DOMNodeRemoved
*  DOMNodeRemovedFromDocument
*  DOMSubtreeModified
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Usage example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-language-javascript&quot;&gt;element.addEventListener(&quot;DOMNodeInserted&quot;, function (ev) {
  // ...
}, false);
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h4 id=&quot;meet-the-dom4-mutation-observers&quot;&gt;Meet the DOM4 Mutation Observers&lt;/h4&gt;
&lt;p&gt;Now we have a better API in the &lt;a href=&quot;http://www.w3.org/TR/dom/#mutation-observers&quot;&gt;DOM4&lt;/a&gt; specification, &lt;strong&gt;MutationObservers.&lt;/strong&gt; This specification became a W3C recommendation on 19 November 2015.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationObserver&quot;&gt;MutationObservers&lt;/a&gt; has a more complex API that the previous method, but it’s specifically designed for the requirements. The good thing here is that you specify which DOM changes you will be &lt;em&gt;observing&lt;/em&gt; when instanciating the observer.&lt;/p&gt;

&lt;p&gt;In my case I will be observing the DOM mutations when the subtree is changed.&lt;/p&gt;

&lt;p&gt;An implementation example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-language-javascript&quot;&gt;// select the target node
var target = document.querySelector('#some-id');
 
// create an observer instance
var observer = new MutationObserver(function(mutations) {
  mutations.forEach(function(mutation) {
    console.log(mutation.type);
  });    
});
 
// configuration of the observer:
var config = { attributes: true, childList: true, characterData: true };
 
// pass in the target node, as well as the observer options
observer.observe(target, config);
 
// later, you can stop observing
observer.disconnect();
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&quot;browser-support&quot;&gt;Browser support&lt;/h6&gt;

&lt;p&gt;It’s expected that IE 11 is the only version that supports MutationObservers, since they already stated that it will be the last support version. The new versions of Edge already supports this feature, as well other modern browsers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2016/02/mutation.png&quot; alt=&quot;Browser Support&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;building-a-poc-extension&quot;&gt;Building a PoC extension&lt;/h3&gt;

&lt;p&gt;I built a small &lt;a href=&quot;https://github.com/fjaguero/twitter-replies-counter&quot;&gt;Chrome extension&lt;/a&gt; (&lt;em&gt;port to WebExtension soon, they ship on Firefox stable on March 2016!&lt;/em&gt;) that simply counts the number of replies a tweet has. This is done by observing a div (the twitter popup) and counting the number of subtree modifications (each modification is a reply).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Extension example usage&lt;/strong&gt;
&lt;img src=&quot;https://camo.githubusercontent.com/0ac2c364825f373503b8220879c51424e5a67b95/687474703a2f2f636c2e6c792f334f324a336830733342325a2f53637265656e2532305265636f7264696e67253230323031362d30322d3237253230617425323030342e3134253230702e2532306d2e2e676966&quot; alt=&quot;Extension&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Content script&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This script is injected when the page is loaded:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-language-javascript&quot;&gt;$(document).ready(function() {
  // Select the target node (tweet modal)
  var target = $('.PermalinkOverlay-modal').get(0);

  // Create an observer instance
  var observer = new MutationObserver(function(mutations) {
    mutations.forEach(function(mutation) {

      // Get the Twitter modal window replies count
      var loneTweetsCount = $('.PermalinkOverlay-body .ThreadedConversation--loneTweet .tweet').length
      var threadedTweetsCount = $('.PermalinkOverlay-body .ThreadedConversation .tweet').length
      var total = loneTweetsCount + threadedTweetsCount

      // Send message to background.js so we can set the badge text
      chrome.extension.sendMessage({'count': total})

    });
  });

  // Configuration of the observer
  var config = { attributes:true, subtree: true };

  // Pass in the target node, as well as the observer options
  observer.observe(target, config);

});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that I’m using &lt;code class=&quot;highlighter-rouge&quot;&gt;chrome.extension.sendMessage&lt;/code&gt; so I can send a message to the background-script. The background-script is able to use many of the browser APIs that are not available on the injected script (content-script).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Background script&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On the background-script I listen to that message and change the badge text. That’s all.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-language-javascript&quot;&gt;// Listen to content.js events
chrome.extension.onMessage.addListener(
  function(request, sender, sendResponse) {
    if (request.count || request.count === 0) {
      chrome.browserAction.setBadgeText({'text': request.count.toString()})
    }
  }
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It’s great to see how the browsers APIs gets more and more powerful and easy to use… keeping in mind that the Web can run anywhere!&lt;/p&gt;

&lt;p&gt;Never settle.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Apr 2018 01:15:49 +0000</pubDate>
        <link>http://localhost:4000/posts/using-mutationobservers-to-build-a-simple-extension/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/using-mutationobservers-to-build-a-simple-extension/</guid>
        
        <category>Javascript</category>
        
        <category>Github</category>
        
        <category>Extension</category>
        
        
      </item>
    
      <item>
        <title>The Motivation Tank</title>
        <description>&lt;p&gt;When writing, I always like to check the multiple definitions that a word can have. In this case the following definition is accurate for what I understand by my experience:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Motivation is a theoretical construct used to explain behavior. It represents the reasons for people’s actions, desires, and needs. Motivation can also be defined as one’s direction to behavior, or what causes a person to want to repeat a behavior and vice versa”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How it works&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To keep something working you will probably need some kind of fuel. Well, you guessed it, in this case that fuel is called &lt;strong&gt;motivation&lt;/strong&gt;. Some people think that motivation is something that we can manage &lt;em&gt;easily&lt;/em&gt;, that you just need it to &lt;em&gt;make&lt;/em&gt; when needed. I wish it was that easy.&lt;/p&gt;

&lt;p&gt;Think of motivation as the fuel of your car: the more you use it along the day, the less you have. And you need to refill it. If you want to achieve something every single day, do it the first thing in the day. That’s were you have your motivation at 100%. Think of every day as another wonderful opportunity to move one step forward to success. Use that to complete your priority task. Otherwise, motivation will fall down and you will be less likely to do it at the end of the day.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fill the tank&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A healthy body is needed to have a bigger tank of motivation. One of the best habits you can build is the habit to exercise. If you are already doing exercise you may know the benefits and how it affects your daily routine. If you don’t have that habit, keep in mind that you don’t need to go all the way with the bells and whistles (best running shoes, apps, etc). Even just walking 10.000 steps is a good start.&lt;/p&gt;

&lt;p&gt;Another clear way to fill your tank is by &lt;strong&gt;having a great breakfast&lt;/strong&gt;. It may sound obvious, but breakfast is more important than you think. When you wake up, the blood sugar your body needs to make your muscles and brain work their best is usually low. Breakfast helps replenish it. If you don’t get enough breakfast energy you will be more likely to overeat later in that day.&lt;/p&gt;

&lt;p&gt;The last one is probably the clearest one: &lt;strong&gt;sleep&lt;/strong&gt;. Sleeping enough makes the difference, specially in the afternoons. A bad sleep habit is killing. Your motivation will completely disappear like magic.&lt;/p&gt;

&lt;p&gt;Next time you don’t’ feel motivated, think about it. Did you have enough fuel?&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;If you liked this article feel free to get the first chapter of my book &lt;a href=&quot;http://thesuccesshacker.es/&quot;&gt;The Success Hacker&lt;/a&gt;, a practical guide on productivity, building efficient teams and overcoming complexities.&lt;/p&gt;

</description>
        <pubDate>Mon, 16 Apr 2018 01:15:49 +0000</pubDate>
        <link>http://localhost:4000/posts/the-motivation-tank/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/the-motivation-tank/</guid>
        
        <category>Habits</category>
        
        <category>Motivation</category>
        
        
      </item>
    
      <item>
        <title>How I got a +150 days streak learning german on Duolingo</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://cl.ly/image/1j1y1F070S00/Image%202015-11-15%20at%202.02.30%20a.%20m..png&quot; alt=&quot;Duolingo Profile&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I started learning german in 2013 when I discovered &lt;a href=&quot;https://www.duolingo.com/&quot;&gt;Duolingo&lt;/a&gt;. The first week I focused on the english track but since I didn’t feel like having a need to improve my english, I started with german just for fun and like a challenge. Learning german that days was something casual, for curiosity, with less than 50 XP per week. Months later, that changed.&lt;/p&gt;

&lt;h2 id=&quot;the-power-of-habits&quot;&gt;The power of Habits&lt;/h2&gt;

&lt;p&gt;An habit is basically something you do &lt;strong&gt;in an automatic way&lt;/strong&gt;. Many people think that it takes 21 days to form a new habit but it turns out that it takes more time. The University College London &lt;a href=&quot;http://jamesclear.com/new-habit&quot;&gt;said&lt;/a&gt; states that &lt;em&gt;on average, it takes more than 2 months before a new behavior becomes automatic — 66 days to be exact.&lt;/em&gt; Anyway, this can vary widely depending on multiple factors.&lt;/p&gt;

&lt;p&gt;My learning habit started with the &lt;strong&gt;mobile app&lt;/strong&gt; after having lunch. The mobile app is really fun and you will have a superb experience compared to others. Every day I did 20 XP for months, but I didn’t reach a 150+ streak. I think that it was something like 80-90 days.&lt;/p&gt;

&lt;p&gt;After some months I changed my habit and started using the &lt;strong&gt;Duolingo website&lt;/strong&gt;. Now I use the website after I have dinner. That worked better for me. The main reason is because there is a &lt;strong&gt;timed practice mode&lt;/strong&gt; that allows you to do the entire 20 points in a single try. Practice mode was the key to maintain the days strike. The Duolingo website has many other features and it’s more effective if you want to take the learning process to the next level. I still use the mobile app sometimes, especially when I am travelling or in bed.&lt;/p&gt;

&lt;h2 id=&quot;my-learning-process&quot;&gt;My learning process&lt;/h2&gt;

&lt;p&gt;After years using Duolingo I found the formula that works for me. There’s no &lt;em&gt;rocket science&lt;/em&gt;, it’s just &lt;strong&gt;a mix between new skills and practice&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I do 2 days of practice mode for every day I spend on learning new skills. If you go all the way down learning skills, it will be impossible for your brain to retain all that information. That’s why I prefer to go slow and steady.&lt;/p&gt;

&lt;h3 id=&quot;next-steps&quot;&gt;Next steps&lt;/h3&gt;

&lt;p&gt;Start listening to/talking with german people. I had a german flatmate once and also I have been in Hannover for a month (in 2010) but that was not enough.&lt;/p&gt;

&lt;p&gt;In my opinion, german is by far more complex than english (like spanish), so it will take a lot of conversations, TV series with subs and playing games in german to start feeling fluent.&lt;/p&gt;

&lt;p&gt;I hope this posts helps you learn a language -_or anything else_- by creating an habit. I would love to hear your story, just drop me a &lt;a href=&quot;http://twitter.com/fjaguero&quot;&gt;tweet&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;PS: I really like the &lt;a href=&quot;https://www.youtube.com/playlist?list=PLr--hFvDFSdrI5-3gkIQlwo9JPRQ3EU63&quot;&gt;soundtrack&lt;/a&gt; from the game &lt;em&gt;Wolfenstein: The New Order&lt;/em&gt;.&lt;/p&gt;

</description>
        <pubDate>Mon, 16 Apr 2018 01:15:49 +0000</pubDate>
        <link>http://localhost:4000/posts/how-i-got-150-days-streak-on-duoling/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/how-i-got-150-days-streak-on-duoling/</guid>
        
        <category>Personal</category>
        
        <category>German</category>
        
        <category>Learning</category>
        
        
      </item>
    
      <item>
        <title>How I fixed my BrizTechVR Google Cardboard V2 lens issues</title>
        <description>&lt;p&gt;&lt;img src=&quot;/content/images/2016/04/cardboard.png&quot; alt=&quot;Cardboard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This week I ordered the &lt;a href=&quot;http://www.amazon.co.uk/dp/B00Z6SIARQ/ref=sr_1_1?ie=UTF8&amp;amp;qid=1428254133&amp;amp;sr=8-1&amp;amp;keywords=google%20cardboard&amp;amp;m=A12O1TAXK1QT74&quot;&gt;BrizTechVR Google Cardboard V2&lt;/a&gt;. These are not the original &lt;a href=&quot;https://www.google.com/get/cardboard/&quot;&gt;Google Cardboard&lt;/a&gt; but since this is basically &lt;em&gt;cardboard&lt;/em&gt;, the guys from BrizTechVR followed the &lt;a href=&quot;https://www.google.com/get/cardboard/get-cardboard/&quot;&gt;specifications&lt;/a&gt; for both the first and the V2 version.&lt;/p&gt;

&lt;p&gt;You can’t expect a incredible quality &lt;em&gt;tech&lt;/em&gt; product for 20€, but the improvments from the first version are worthy (there are &lt;a href=&quot;http://www.hypergridbusiness.com/2016/03/review-lenest-viewer-is-close-to-perfect/&quot;&gt;some &amp;lt;30€ non-cardboard&lt;/a&gt; versions with really good reviews). The V2 version now it comes with a push button (no more magnets) and it’s ready to handle large screen devices.&lt;/p&gt;

&lt;h3 id=&quot;the-problem&quot;&gt;The problem&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;The QR code that set the lens config wasn’t working properly&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I tried them on both Android and iOS to check the marketplaces and see what was available. At the end, the &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.google.samples.apps.cardboarddemo&amp;amp;hl=es&quot;&gt;Cardboard&lt;/a&gt; app has some good recommendations. My favorite one is &lt;a href=&quot;http://vrse.com/&quot;&gt;VRSE&lt;/a&gt;. It’s not a game but a platform for VR storytelling.&lt;/p&gt;

&lt;p&gt;I started watching the NYT &lt;em&gt;Walking in New York&lt;/em&gt; &lt;a href=&quot;http://vrse.com/watch/id/100/&quot;&gt;documentary&lt;/a&gt; but suddenly what I was viewing &lt;strong&gt;was wrong&lt;/strong&gt;. It wasn’t correctly centered. I was able to correctly view the video by closing one eye… so I guessed that the QR code that has the configuration settings wasn’t working properly. Actually, I tried some other games and it worked perfectly.&lt;/p&gt;

&lt;h2 id=&quot;the-solution&quot;&gt;The solution&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Creating a custom lens config did the trick&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2016/04/Captura-de-pantalla-2016-04-03-a-las-3-09-30.png&quot; alt=&quot;Viewer Profile Generator&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Turns out that &lt;a href=&quot;https://www.reddit.com/r/GoogleCardboard/comments/3ed1b3/double_vision_with_cardboard_app_incorrect/&quot;&gt;I wasn’t the only one&lt;/a&gt; having this kind of problems.&lt;/p&gt;

&lt;p&gt;All the software that uses the &lt;a href=&quot;https://developers.google.com/cardboard/&quot;&gt;Cardboard SDK&lt;/a&gt; are able to change the lens config. This allows everyone to make his own cardboard and then just generate a &lt;strong&gt;Viewer Profile&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To generate the &lt;a href=&quot;https://www.google.com/get/cardboard/viewerprofilegenerator/&quot;&gt;viewer profile&lt;/a&gt; we need to pair the phone and the browser by accessing an specific URL that the profile generator give us.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2016/04/profile-generator.png&quot; alt=&quot;Profile generator&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Basically I changed the main parameters like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2016/04/Captura-de-pantalla-2016-04-03-a-las-21-49-35.png&quot; alt=&quot;Config&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And finally… the generated QR code if you want to try it:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2016/04/qr_viewer_profile.png&quot; alt=&quot;QR code&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Never settle.&lt;/p&gt;

</description>
        <pubDate>Mon, 16 Apr 2018 01:15:49 +0000</pubDate>
        <link>http://localhost:4000/posts/how-i-fixed-my-briztechvr-google-cardboard-v2/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/how-i-fixed-my-briztechvr-google-cardboard-v2/</guid>
        
        <category>Cardboard</category>
        
        <category>VR</category>
        
        
      </item>
    
      <item>
        <title>Efficient workflow with Divvy</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://f.cl.ly/items/0q0N3W1p3O0A0v0I3a3k/clock.jpg&quot; alt=&quot;Clock&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’m always trying productivity tools. Some of them improve the productivity, like Divvy, and some not. Others are even used to measure the productivity itself, like RescueTime, but we can talk about that in another post.&lt;/p&gt;

&lt;h2 id=&quot;what-is-divvy&quot;&gt;What is Divvy&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://mizage.com/divvy/&quot;&gt;Divvy&lt;/a&gt; is a &lt;strong&gt;small utility to resize windows&lt;/strong&gt;. You may ask the following question: Does this kind of utilities really improve our productivity in a noticeable way? It depends on the task at hand, but the answer will probably be a yes.&lt;/p&gt;

&lt;p&gt;In Web Development, is common to have plenty of windows opened and to use keyboard shortcuts to get things done faster. Here is where Divvy is useful. The bad thing here is that is available only on OS X.&lt;/p&gt;

&lt;p&gt;The default behavior is to press CMD+ALT+KEY to show the resize dialog, but like the 90% of the time you will be probably resizing the windows in three ways:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Full screen&lt;/li&gt;
  &lt;li&gt;Half-screen-left&lt;/li&gt;
  &lt;li&gt;Half-screen-right&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-magic-of-shortcuts&quot;&gt;The magic of shortcuts&lt;/h2&gt;
&lt;p&gt;Shortcuts will allow us to resize the windows using only the keyboard, maximizing the speed and without the need&lt;/p&gt;

&lt;p&gt;My configuration is the following:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://f.cl.ly/items/1i0z2I201P3g0Z1f0m27/divvy.png&quot; alt=&quot;Divvy&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is truly magical. You can set up a set of windows in 3 seconds. &lt;strong&gt;Pressing the shortcut twice, moves the window to the other display&lt;/strong&gt;, making it possible to move windows between different screens really easy. Once you get used to navigate between desktops, windows and displays, it will be really frustrating to go back!&lt;/p&gt;

&lt;h3 id=&quot;bonus-tip&quot;&gt;Bonus tip&lt;/h3&gt;
&lt;p&gt;While doing demos, sometimes there is a need to focus on specific points from the screen. I use a shortcut to zoom-in and zoom-out the window, making it really easy to play with the screen. This has become, like the Divvy shortcuts, an indispensable workflow trick.&lt;/p&gt;

&lt;p&gt;In the preferences panel, go to Accessibility &amp;gt; Zoom and then enable Use scroll gesture with modifier keys to zoom. Now you can press the key and zoom to specific points fast and easy. I use it with the CMD key, but that’s a personal preference, mainly because is use the ALT key to activate Alfred.&lt;/p&gt;

</description>
        <pubDate>Mon, 16 Apr 2018 01:15:49 +0000</pubDate>
        <link>http://localhost:4000/posts/efficient-workflow-with-divvy/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/efficient-workflow-with-divvy/</guid>
        
        <category>Tools</category>
        
        <category>Productivity</category>
        
        
      </item>
    
      <item>
        <title>5 reasons why I choose React-Meteor for my projects</title>
        <description>&lt;p&gt;&lt;em&gt;This is a small summary of why I am really happy developing apps with Meteor and the react-meteor package.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-development-speed&quot;&gt;1. Development speed&lt;/h2&gt;

&lt;p&gt;The main reason of the combo is clear: &lt;strong&gt;speed&lt;/strong&gt;. It’s crucial to test what you are building as fast as possible. Show your work to people and just ship it™.&lt;/p&gt;

&lt;p&gt;Don’t lose time on the all common tasks like the environment setup, build configurations, deploys, login systems, complex data handling, etc.&lt;/p&gt;

&lt;p&gt;This is a list of thing that you already have when you start a Meteor project:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;User login/registration (3 lines of code)&lt;/li&gt;
  &lt;li&gt;Password change/recovery (5 lines of code)&lt;/li&gt;
  &lt;li&gt;Backend authentication&lt;/li&gt;
  &lt;li&gt;Database setup&lt;/li&gt;
  &lt;li&gt;Easy Deploys&lt;/li&gt;
  &lt;li&gt;Hot-reload development&lt;/li&gt;
  &lt;li&gt;Data reactivity&lt;/li&gt;
  &lt;li&gt;Data sync in real-time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Many of the common tasks are already solved. Just keep one thing in mind: &lt;strong&gt;Don’t reinvent the wheel™&lt;/strong&gt; .&lt;/p&gt;

&lt;p&gt;There is no need to do all the bootstrapping from ground up… just focus on the core values of what your are building.&lt;/p&gt;

&lt;p&gt;A quick example: With &lt;a href=&quot;https://github.com/arunoda/meteor-up/tree/mupx&quot;&gt;Meteor Up&lt;/a&gt; you can handle the full deploy process without leaving the command… with a single command.&lt;/p&gt;

&lt;h2 id=&quot;2-real-time-with-no-config-needed&quot;&gt;2. Real-time with no config needed&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/zmRmrZFPoqh6U/giphy.gif&quot; alt=&quot;Websockets&quot; /&gt;
&lt;span class=&quot;caption&quot;&gt;Real-time data out of the box. Yay!&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;With the MEAN stack, when you make a REST request for a table/collection, you’re essentially saying “Send me the results of this query”. With Meteor, you subscribe to the results of that query, and any newly created or modified documents that matched will be automatically sent to the client over a fast WebSocket connection.&lt;/p&gt;

&lt;p&gt;Meteor uses &lt;a href=&quot;https://www.meteor.com/ddp&quot;&gt;DDP&lt;/a&gt;, which basically uses stringified JSONs over WebSocket. It’s a simple protocol for fetching structured data from a sever and receiving live updates when the data changes.&lt;/p&gt;

&lt;p&gt;What you feel when you have an entire app synced between browsers and users without writing a line of code is amazing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;There’s no need to neither setup anything nor learn a special API!&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-universal-javascript&quot;&gt;3. Universal JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2016/03/meteor-arch.png&quot; alt=&quot;Meteor Architecture&quot; /&gt;
&lt;span class=&quot;caption&quot;&gt;The Meteor Architecture&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;All the client and server-side code in the same repo. Same code works on iOS and Android. No context switch, you feel it’s all the same.&lt;/p&gt;

&lt;p&gt;A small example of both sides:&lt;/p&gt;

&lt;h5 id=&quot;server-code&quot;&gt;Server code&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&quot;language-language-javascript&quot;&gt;// Serve all the user data for our Goals collection
Meteor.publish(&quot;goals&quot;, function (userId) {
  return Goals.find({
    'userId': this.userId
  });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;client-code&quot;&gt;Client code&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&quot;language-language-javascript&quot;&gt;// Using the react-meteor mixin ReactMeteorData
getMeteorData() {
  let sub = Meteor.subscribe(&quot;goals&quot;)

  return {
    goals: Goals.find({
     'userId': Meteor.userId()
   }).fetch()
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The other good thing is that when you make a change on the backend code, the browser/server is refreshed with the latest changes. Free hot-reload on both sides with zero config (no need for Webpack/Browserify).&lt;/p&gt;

&lt;h2 id=&quot;4-components-magic&quot;&gt;4. Components magic&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/ujUdrdpX7Ok5W/giphy.gif&quot; alt=&quot;Magic&quot; /&gt;
&lt;span class=&quot;caption&quot;&gt;Using one-way data flow&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;I don’t want to get into detail with React but I can say that it radically changed the way I work with front-end code (like Meteor changed everything I knew when I started using it).&lt;/p&gt;

&lt;p&gt;The main wins:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Declarative code is super easy to reason about&lt;/li&gt;
  &lt;li&gt;One way data flows are easy to follow&lt;/li&gt;
  &lt;li&gt;It’s just JavaScript with a small API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are already using React, the only new thing you will have when working with Meteor is that it exposes some methods like &lt;code class=&quot;highlighter-rouge&quot;&gt;getMeteorData()&lt;/code&gt;, which basically serves you the data over the socket connection. Every time a change is made, your props/state change and the view is updated. Easy peasy.&lt;/p&gt;

&lt;h2 id=&quot;5-less-codelearning-curve&quot;&gt;5. Less code/learning curve&lt;/h2&gt;

&lt;p&gt;The learning curve is low for React: it’s just components + state + props. No 300 pages books, no playing with the &lt;em&gt;best&lt;/em&gt; way to handle your data for months.&lt;/p&gt;

&lt;p&gt;In the case of Meteor, the learning curve can be higher, but no in terms of code, it’s a paradigm change. The main things are &lt;code class=&quot;highlighter-rouge&quot;&gt;reactivity&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;publications and subscriptions&lt;/code&gt; and how you handle client and server &lt;code class=&quot;highlighter-rouge&quot;&gt;collections&lt;/code&gt;. Actually the Meteor server-side is a NodeJS on asteroids.&lt;/p&gt;

&lt;p&gt;Check this code below.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-language-javascript&quot;&gt;Camino.Goals = React.createClass({
  mixins: [ReactMeteorData],

  // Fetch the data. Reactive and real-time by default.
  getMeteorData() {
    let sub = Meteor.subscribe(&quot;goals&quot;)

    return {
      isLoading: !sub.ready(),
      goals: Goals.find({
        'userId': Meteor.userId()
      }).fetch()
    }
  },

  // Pass the data to the view
  showGoals() {
    return (
      &amp;lt;div className=&quot;goals section__container&quot;&amp;gt;
        &amp;lt;GoalsList goals={this.data.goals} /&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  },

  // Show a loading spinner
  showSpinner() {
    return &amp;lt;Spinner /&amp;gt;
  },

  // Render the Goals view
  render() {
    return (
      &amp;lt;div className=&quot;jumbotron&quot;&amp;gt;
        &amp;lt;div className=&quot;container&quot;&amp;gt;
          {
            this.data.isLoading ? this.showSpinner() : this.showGoals()
          }
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  }

})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is an example of a controller-like view that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Is subscribed to a previously defined data scheme&lt;/li&gt;
  &lt;li&gt;Handles the server data in real-time&lt;/li&gt;
  &lt;li&gt;Handles changes reactively&lt;/li&gt;
  &lt;li&gt;Uses a React component to make the changes on the Virtual DOM, preventing unnecessary re-flows&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This means that if any of the clients or the database changes, the view gets updated in every session (browsers, for example) in an efficient way (in terms of performance).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No extra code needed. Boom.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/YLgIOmtIMUACY/giphy.gif&quot; alt=&quot;Meteor&quot; /&gt;
&lt;span class=&quot;caption&quot;&gt;When you realize all the time you lost by not using this amazing combo&lt;/span&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;further-readings&quot;&gt;Further readings&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.meteor.com/tutorials/react/creating-an-app&quot;&gt;Meteor To-do app with React&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.discovermeteor.com/blog/reactivity-basics-meteors-magic-demystified/&quot;&gt;Reactivity Basics: Meteor’s Magic Demystified&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kadira.io/academy/meteor-performance-101&quot;&gt;Meteor performance 101&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://themeteorchef.com/snippets/making-use-of-settings-json/#tmc-what-is-settingsjson&quot;&gt;Making Use of Settings.json&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Update:&lt;/strong&gt;
The Meteor Developer Group just released &lt;a href=&quot;http://info.meteor.com/blog/announcing-meteor-1.3&quot;&gt;Meteor 1.3&lt;/a&gt; which has new great features such as the ability to use ES2015 Modules, a built-in application testing suite, a native NPM integration (on both client and server) among more.&lt;/em&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 16 Apr 2018 01:15:49 +0000</pubDate>
        <link>http://localhost:4000/posts/5-reasons-why-i-choose-react-meteor-for-my-projects/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/5-reasons-why-i-choose-react-meteor-for-my-projects/</guid>
        
        <category>Code</category>
        
        <category>Meteor</category>
        
        <category>React</category>
        
        
      </item>
    
      <item>
        <title>My first post</title>
        <description>&lt;p&gt;This is a test&lt;/p&gt;
</description>
        <pubDate>Sat, 14 Apr 2018 21:32:00 +0000</pubDate>
        <link>http://localhost:4000/posts/my-first-post/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/my-first-post/</guid>
        
        
      </item>
    
  </channel>
</rss>
